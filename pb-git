#!/usr/bin/env python2.7
from pb_git import cmds
import argparse
import sys

def main(argv):
    parser = argparse.ArgumentParser(
            formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('-d', '--directory',
            default='.',
            help='Directory of submodules')
    parser.add_argument('-v', '--verbose',
            action='store_true')
    subparsers = parser.add_subparsers()

    p = subparsers.add_parser('checkout',
            help='Checkout all repos described by *.ini files, cloning and fetching as needed.',
            #aliases=['co'],
            )
    p.set_defaults(func=cmds.checkout)

    p = subparsers.add_parser('prepare',
            help='Prepare to submit the current changes, staged as *.ini.bak files.',
            )
    p.set_defaults(func=cmds.prepare)

    p = subparsers.add_parser('submit',
            help='"p4 submit" the prepared changes (*.ini.bak). If you have open changes which should be excluded, use "-c" or "-n".',
            )
    p.add_argument('-c', '--change',
            default='default',
            help='Perforce changenum. Use this to avoid submitting your currently opened files.',
            )
    p.add_argument('-b', '--bug',
            default='999999',
            help='Bugzilla number.',
            )
    p.add_argument('-m', '--message',
            default='Updating SHA1s.',
            help='Brief message at top of submit description. Bug # and github links will be added.',
            )
    p.add_argument('-n', '--dry-run',
            action='store_true',
            help='Do not actually cmds any p4 commands.',
            )
    p.set_defaults(func=cmds.submit)
    args = parser.parse_args(argv[1:])
    args.func(args)

main(sys.argv)
